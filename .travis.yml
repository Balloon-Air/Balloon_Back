language: java
jdk:
  - openjdk8

branches:
  only:
    - main
    
before_install:
  - cd ./balloon
  - openssl aes-256-cbc -K $encrypted_f3a04567eeab_key -iv $encrypted_f3a04567eeab_iv -in jwt.tar.enc -out jwt.tar -d
  - openssl aes-256-cbc -K $encrypted_279d18307899_key -iv $encrypted_279d18307899_iv -in aws.tar.enc -out aws.tar -d
  - openssl aes-256-cbc -K $encrypted_029489973163_key -iv $encrypted_029489973163_iv -in mysql.tar.enc -out mysql.tar -d
  - tar xvf jwt.tar ./src/main/resources
  - tar xvf aws.tar ./src/main/resources
  - tar xvf mysql.tar ./src/main/resources
  - cat application-mysql.properties
  - cat application-aws.properties
  - cat application-jwt.properties
  - ls ./src/main/resources
  - chmod +x mvnw
  


install:
  - mvn -N io.takari:maven:wrapper
  - ls
  - ./mvnw install -DskipTests=true -Dmaven.javadoc.skip=true -B -V

  


# Travis CI 서버의 Home 1
cache:
  directories:
    - '$HOME/.m2'

before_deploy:
  - mkdir -p before-deploy # zip에 포함시킬 파일들을 담을 디렉토리 생성
  - cp ../scripts/*.sh before-deploy/
  - pwd
  - cp ../appspec.yml before-deploy/
  - cp target/*.jar before-deploy/
  - cd before-deploy && zip -r before-deploy * # before-deploy로 이동후 전체 압축
  - cd ../ && mkdir -p deploy # 상위 디렉토리로 이동후 deploy 디렉토리 생성
  - mv before-deploy/before-deploy.zip deploy/Balloon.zip # deploy로 zip파일 이동

deploy:
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY # Travis repo settings에 설정된 값
    secret_access_key: $AWS_SECRET_KEY # Travis repo settings에 설정된 값
    bucket: balloon-springboot-build # S3 버킷
    region: ap-northeast-2
    skip_cleanup: true
    acl: private # zip 파일 접근을 private으로
    local_dir: deploy # before_deploy에서 생성한 디렉토리
    wait-until-deployed: true 
    on:
      all_branches: true

  - provider: codedeploy
    access_key_id: $AWS_ACCESS_KEY # Travis repo settings에 설정된 값
    secret_access_key: $AWS_SECRET_KEY # Travis repo settings에 설정된 값
    bucket: balloon-springboot-build # S3 버킷
    key: Balloon.zip # 빌드 파일을 압축해서 전달
    bundle_type: zip
    application: balloon-springboot2-webservice # 웹 콘솔에서 등록한 CodeDeploy 어플리케이션
    deployment_group: balloon-springboot2-webservice-group # 웹 콘솔에서 등록한 CodeDeploy 배포 그룹
    region: ap-northeast-2
    wait-until-deployed: true
    on:
      all_branches: true

# CI 실행 완료시 메일로 알람
notifications:
  email:
    recipients:
      - khs39200@gmail.com
